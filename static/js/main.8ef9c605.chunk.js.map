{"version":3,"sources":["UI/Neighbor/Neighbor.module.css","UI/TableUi.js","components/Sprint1.js","modules/sort.js","components/Sprint2/NamesInput.js","components/Sprint2/CosenusSimilarity/magnitude.js","components/Sprint2/CosenusSimilarity/checkAngle.js","components/Sprint2/CosenusSimilarity/cosenus.js","components/Sprint2/CosenusSimilarity/dotProduct.js","components/Sprint2/Sprint2.js","components/Sprint2/CosenusSimilarity/getKNeighbors.js","UI/Neighbor/Neighbor.jsx","components/Sprint3/Sprint3.jsx","UI/Slider/Slider.jsx","img/user.svg","img/share.svg","img/aggregation.svg","components/Sprint4/Sprint4.jsx","modules/csvParser.js","modules/fetchCSV.js","data/sp3.csv","data/pizzas.csv","App.js","index.js","UI/TableUi.module.css","UI/Slider/Slider.module.css"],"names":["module","exports","TableUi","props","data","headers","parsedData","setActiveCell","cellContent","console","log","classes","map","e","className","join","rand","generate","getTd","tdInfo","key","push","elem","td","Sprint1","useState","inputValueName","setInputValueName","inputValueOrder","setInputValueOrder","copyCatData","setCopyCatData","onSubmit","event","preventDefault","ascendent","dataSorted","info","column","dispatch","sort","a","b","sortingHandler","value","onChange","target","name","NamesInput","names","onSetValue","id","getMagnitude","current","reducedValue","Object","values","splice","reduce","previousValue","currentValue","Math","pow","sqrt","ridOfHeader","item","checkAngle","rowA","rowB","rowAConverted","rowBConverted","rowAMax","max","rowBMax","rowANormalized","rowBNormalized","final","forEach","i","cosineSimilarityFunc","dataArray","firstColumnName","currentDotProduct","personProp","keys","filter","dotProduct","magnitudeA","magnitudeB","abs","fixedSim","dot","getSimilarity","Sprint2","input1","input2","inputValues","setInputValues","isFixed","setIsFixed","similarityPercentage","setSimilarityPercentage","prev","onClick","length","similarityConstant","toFixed","style","color","getKNeighbors","person","nameHeader","entries","isCrossover","testArray","dataToCompare","p","tie","Neighbor","index","styles","Sprint3","currentPerson","setCurrentPerson","neighbors","setNeighbors","arrayResult","setArrayResult","currentPersonData","find","test","type","Slider","min","step","aggregationSystem","Sprint4","secondData","mainData","compareData","secondHeaders","asideHeigh","setAsideHeigh","secondHeader","pizzaNeighbor","setPizzaNeighbor","setPerson","aggregation","setAggregation","defaultData","dv","split","setValues","newVector","setNewVector","showTable","setShowTable","getSystemAggregationTVector","system","tVector","neighborsVector","standardVector","currentData","objArray","v","acc","val","std","getStandardDeviationFromNeighbor","table","transformRangeValue","valuesArray","va","rangeValues","transformedData","dValue","weightSystem","parseInt","toString","getTransformedData","arrayR","n","includes","tempVec","newV","vectorTest","element","round","getTemporalVector","protoPerson","aggregationVectorData","aggregationPerson","pizzasNeighborData","ref","aside","getBoundingClientRect","height","newData","copy","findIndex","parseFloat","src","user","alt","share","aggregationIcon","csvParser","transformed","obj_data","DATA","fetch","catch","response","text","getData","App","dataConverted","setDataConverted","pizzaData","setPizzaData","getDataConverted","fetchCSV","fetchData","useEffect","then","PIZZAS","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ef9c605.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Neighbor_li__iYyOu\"};","import  rand  from \"random-key\";\nimport classes from './TableUi.module.css'; \n\n\nconst TableUi = props => {\n  const {headers, parsedData} = props.data; \n\n  const setActiveCell = (cellContent) => {\n    console.log(typeof cellContent);\n    if(typeof cellContent === 'number' && cellContent !== 0){\n      return classes['active']; \n    }\n  }\n\n  const td = () => {\n    const getTd = (e) => {\n      const tdInfo = [];\n      for (let key in e) {\n        tdInfo.push(e[key]); \n      }; \n      return tdInfo;\n    } \n    return parsedData.map(elem => {\n      return (\n        <tr className={classes['tr-table']} key={rand.generate()} >\n          {getTd(elem).map(e => {\n            \n            return <td className={[classes['td'], setActiveCell(e)].join(' ')} key={rand.generate()}>{e}</td>\n          })}\n        </tr>\n      )\n    }) \n  }\n  return (\n    <table>\n      <thead>\n      <tr>\n        {headers.map(e => <th key={rand.generate()} className={[classes['tfoot']].join(' ')}>{e}</th>)}\n      </tr>\n      </thead>\n      <tbody>{td()}</tbody>\n    </table>\n  ); \n}\nexport default TableUi; ","import React, { useState } from 'react'; \nimport { sortingHandler } from '../modules/sort'; \nimport TableUi from '../UI/TableUi'; \nconst Sprint1 = props => {\n  const [inputValueName, setInputValueName] = useState('A'); \n  const [inputValueOrder, setInputValueOrder] = useState('1'); \n  const { data} = props;\n  const [copyCatData, setCopyCatData] = useState({...data}); \n  //submit\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n    const ascendent = inputValueOrder === '1' ? true : false; \n    const dataSorted = sortingHandler({\n      data: [...copyCatData['parsedData']], \n      ascendent, \n      column: inputValueName\n    }); \n    setCopyCatData({headers: copyCatData['headers'], parsedData: dataSorted}); \n  }; \n  return (\n    <div className=\"sprint sprint1\">  \n      <h2>Sprint 1</h2>\n      <form className=\"form\" onSubmit={handlerSubmit}>\n        <select\n          className=\"select\" \n          value={ inputValueName } \n          onChange={(e) => setInputValueName(e.target.value)}\n        >\n          <option value=\"A\">A</option>\n          <option value=\"B\">B</option>\n        </select>\n        <select \n          className=\"select\"\n          value={inputValueOrder}\n          onChange={(e) => setInputValueOrder(e.target.value)}\n        >\n          <option value=\"1\">Ascendent</option>\n          <option value=\"0\">Descendent</option>\n        </select>\n        <button name=\"submit\" className=\"btn\">Send</button>\n      </form>\n      {data && <TableUi data={copyCatData} />}\n    </div>\n  );\n}; \nexport default Sprint1;"," //Handle Sorting\n export const sortingHandler =  (info) => {\n  const {data, ascendent, column} = info; \n  let dispatch = [...data]; \n  if(ascendent){\n    dispatch.sort((a, b) => a[column] - b[column]);\n  }else{\n    dispatch.sort((a, b) => b[column] - a[column]); \n  }; \n  return dispatch;\n}; \n","import '../../App.css'; \nconst NamesInput = ({names,onSetValue}) => {\n  const handleInputChange = (event) => {\n    onSetValue(event.target.value); \n  }; \n  return(\n    <select className=\"select\" onChange={handleInputChange} name=\"names\" id=\"name-select\">\n      { names.map(name => <option value={name} key={name}>{name}</option>) }\n    </select>\n  );\n}\n\nexport default NamesInput;\n","export const getMagnitude = (current) => {\n  const total = Object.values(current).splice(1);\n  const reducer = (previousValue, currentValue) => previousValue + Math.pow(currentValue, 2);\n  const reducedValue = total.reduce(reducer, 0);\n  return Math.sqrt(reducedValue);\n}","import {getMagnitude} from './magnitude'; \nconst ridOfHeader = (item) => {\n  return Object.values(item).splice(1);\n}\nexport const checkAngle = ([rowA, rowB]) => {\n  const rowAConverted = ridOfHeader(rowA);\n  const rowBConverted = ridOfHeader(rowB);\n  const rowAMax = Math.max(...rowAConverted); \n  const rowBMax = Math.max(...rowBConverted); \n  const rowANormalized = rowAConverted.map(item => item / rowAMax); \n  const rowBNormalized = rowBConverted.map(item => item / rowBMax); \n  let final = 0; \n  rowANormalized.forEach((item,i) => {\n    final =+ (item - rowBNormalized[i]); \n  });   \n  return final === 0? true : false;\n}; \nexport const fixedSim = ([rowA, rowB]) => {\n  const a = getMagnitude(rowA); \n  const b = getMagnitude(rowB); \n  return a === b ? 1 : (Math.abs(a - b) / Math.max(a, b)); \n}","import {dotProduct} from '../CosenusSimilarity/dotProduct'; \nimport { getMagnitude } from '../CosenusSimilarity/magnitude';\nimport {checkAngle, fixedSim} from '../CosenusSimilarity/checkAngle'; \n\nexport const getSimilarity = ({dot, magnitudeA, magnitudeB}) => {\n  const similarity = dot / (magnitudeA* magnitudeB);\n  return (magnitudeA === 0 || magnitudeB === 0) ? 0 : similarity; \n}\n\nexport const cosineSimilarityFunc = (dataArray, firstColumnName) => {\n  const currentDotProduct = dotProduct(dataArray, firstColumnName); \n  const magnitudeA = getMagnitude(dataArray[0]);\n  const magnitudeB = getMagnitude(dataArray[1]); \n  if(checkAngle(dataArray)){\n    return fixedSim(dataArray)* 100; \n  }else{\n    return getSimilarity({dot: currentDotProduct,magnitudeA, magnitudeB })* 100; \n  }\n}","export const dotProduct = (data, firstColumnName) => {\n  let personProp = 0; \n  let elemProps = Object.keys(data[0]).filter(elem => elem !== firstColumnName); \n  elemProps.forEach((elem,i)=>{\n    personProp += data[0][elem] * data[1][elem]\n  })\n  return personProp;\n};","import React, {useState} from 'react'; \nimport NamesInput from './NamesInput'; \nimport {cosineSimilarityFunc} from './CosenusSimilarity/cosenus'; \nimport { checkAngle} from './CosenusSimilarity/checkAngle'; \n\n\nconst Sprint2 = ({data}) => {\n  const firstColumnName = data.headers[0]; \n  const names = data.parsedData.map(name => name[firstColumnName]); \n  const [inputValues, setInputValues] = useState({input1:names[0], input2:names[0]}); \n  const [isFixed, setIsFixed] = useState(false); \n  const [similarityPercentage, setSimilarityPercentage] = useState(0); \n  \n  const onSetInput1 = (value) => {\n    setInputValues(prev => ({...prev, input1: value}));\n  };  \n  const onSetInput2 = (value) => {\n    setInputValues(prev => ({...prev, input2: value})); \n  }; \n\n  const handleButtonClick = () => {\n    setIsFixed(false); \n    const dataArray = data.parsedData.filter(name => name[firstColumnName]===inputValues.input1 || name[firstColumnName]===inputValues.input2);\n    if (dataArray.length === 1){\n      setSimilarityPercentage(100); \n      return; \n    }\n\n    if(checkAngle(dataArray)){\n      // setSimilarityPercentage(fixedSim(dataArray)); \n      setIsFixed(true); \n      // return; \n    }; \n    const similarityConstant = cosineSimilarityFunc(dataArray, firstColumnName); \n    setSimilarityPercentage(similarityConstant); \n  }\n  return(\n    <div className=\"sprint sprint2\">\n      <h2>Sprint 2</h2>\n      <div className=\"sprint2__info\">\n        <div className=\"sprint2__actions\">\n          <NamesInput names={names} onSetValue={onSetInput2}/>\n          <NamesInput names={names} onSetValue={onSetInput1}/>\n          <button onClick={handleButtonClick}>Submit</button>\n        </div>\n        <div className=\"sprint2__result\">\n          <h1 className=\"important\">{similarityPercentage.toFixed(1)}%</h1>\n          <h3 style={{color: '#ecf0f3'}}>{isFixed&& 'Fixed'}</h3>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Sprint2;","import {cosineSimilarityFunc} from './cosenus'; \nexport const getKNeighbors = (parsedData, person, nameHeader, entries, isCrossover = false) => {\n  const testArray = []; \n  \n  const dataToCompare = parsedData.filter(name => name[nameHeader[0]]!==person[nameHeader[0]]);\n  dataToCompare.forEach(p => {\n    const tie = cosineSimilarityFunc([person,p], nameHeader[0]);\n    const name = isCrossover ? p[nameHeader[1]]: p[nameHeader[0]];\n    testArray.push({tie, name});\n  })\n  return testArray.sort((a,b) => b.tie-a.tie).splice(0,entries)\n  \n}","import React from 'react'\nimport styles from './Neighbor.module.css'; \nconst Neighbor = ({index, name, value}) => {\n  return (\n    <li className={styles['li']}>\n      <h4> <b>{index}</b>  {name}</h4>\n      <span>{value}</span>\n    </li>\n  )\n}\n\nexport default Neighbor\n","import React, {useState} from 'react'\nimport {getKNeighbors} from '../Sprint2/CosenusSimilarity/getKNeighbors'; \nimport NamesInput from '../Sprint2/NamesInput'; \nimport Neighbor from '../../UI/Neighbor/Neighbor';\n\nconst Sprint3 = ({data}) => {\n  const nameHeader = data.headers[0]; \n  const names = data.parsedData.map(name => name[nameHeader]);\n  const [currentPerson, setCurrentPerson] = useState(names[0]); \n  const [neighbors, setNeighbors] = useState(0); \n  const [arrayResult, setArrayResult ] = useState([]) ; \n  \n  const submitHandler = (e) => {\n    e.preventDefault();\n    const currentPersonData = data.parsedData.find(name => name[nameHeader]===currentPerson);\n    setArrayResult(getKNeighbors(data.parsedData,currentPersonData,[nameHeader], neighbors)); \n  }\n  const inputHandler = (e) => {\n    if(/^\\d+$/.test(e.target.value) || e.target.value === '') setNeighbors(e.target.value )\n  }\n  \n  return (\n    <div className=\"sprint sprint3\">\n      <h2>Sprint 3</h2>\n      <form onSubmit={submitHandler}>\n        <label>\n          <span>Person</span>\n          <NamesInput names={names} onSetValue={setCurrentPerson} />\n        </label>\n        <label>\n          <span>Neighborhood Size</span>\n          <input \n            className=\"input-number\"\n            value={neighbors} \n            onChange={inputHandler} \n            type=\"text\" />\n        </label>\n        <button>Submit</button>\n      </form>\n      {arrayResult.length > 0 && <h3>Nearest Neighbors</h3>}\n      <ul>\n        {arrayResult.map((elem, index) => (\n          <Neighbor \n            key={index}\n            index={index+1} \n            name={elem.name} \n            value={`${(elem.tie).toFixed(1)}%`}\n          />\n        ))}\n      </ul>\n\n    </div>\n  )\n}\n\nexport default Sprint3\n","import styles from './Slider.module.css'; \nconst Slider = ({name, value, onChange}) => {\n  return (\n    <div className={styles['slider']}>\n      <span className={styles['span']}>{name} <strong className={styles['strong']}>{value}%</strong></span>\n      <input \n        type=\"range\" \n        name={name} \n        min=\"0\" \n        max=\"100\"\n        step=\"1\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default Slider\n","export default __webpack_public_path__ + \"static/media/user.ebbcb1c2.svg\";","export default __webpack_public_path__ + \"static/media/share.bebb7b0f.svg\";","export default __webpack_public_path__ + \"static/media/aggregation.69928667.svg\";","import React, {useState} from 'react'\nimport Slider from '../../UI/Slider/Slider'; \nimport NamesInput from '../Sprint2/NamesInput';\nimport {getKNeighbors} from '../Sprint2/CosenusSimilarity/getKNeighbors'; \nimport Neighbor from '../../UI/Neighbor/Neighbor'; \nimport TableUi from '../../UI/TableUi'; \nimport {std} from 'mathjs'; \nimport user from '../../img/user.svg'; \nimport share from '../../img/share.svg'; \nimport aggregationIcon from '../../img/aggregation.svg'; \n\n\nconst aggregationSystem = [\n  'Naive average',\n  'Least misery',\n  'Maximum pleasure',\n  'Media satisfaction',\n]\n\nconst Sprint4 = ({data, secondData}) => {\n  const {parsedData: mainData, headers} = data; \n  const {parsedData: compareData, headers: secondHeaders} = secondData; \n  const [asideHeigh, setAsideHeigh] = useState(300)\n  const nameHeader = headers[0]; \n  const secondHeader = secondHeaders[0]\n  const names = mainData.map(name => name[nameHeader]);\n  const [arrayResult, setArrayResult ] = useState([]) ; \n  const [pizzaNeighbor, setPizzaNeighbor] = useState([])\n  const [person, setPerson] = useState(names[0]); \n  const [aggregation, setAggregation] = useState(aggregationSystem[0]); \n  const [neighbors, setNeighbors] = useState('0'); \n  const dataValues = Object.keys(mainData[0]).splice(1); \n  const defaultData = dataValues.map( dv => ({id: dv.split(' ').join(''), value: 100}))\n  const [values, setValues] = useState(defaultData); \n  const [newVector, setNewVector] = useState(); \n  const [showTable, setShowTable] = useState(false); \n  \n\n  const getStandardDeviationFromNeighbor = (currentData) => {\n    const newV = currentData.map(v => {\n      const { [nameHeader]: name, ...rest} = v;\n      return rest; \n    })\n  \n    const objArray = newV.reduce((acc, val) => {\n      for(const key in val){\n        if(!acc[key]){\n          acc[key] = []\n        }\n        acc[key].push(val[key])\n      }\n      return acc\n    }, {}); \n    for(const key in objArray){\n      objArray[key] = std(objArray[key])\n    }\n    return objArray; \n  }\n\n  const getTransformedData = (currentData, rangeValues) => {\n    return currentData.map( dValue => {\n      const  weightSystem = {};\n      let index = 0;\n      for (const key in dValue){\n        if(key !== nameHeader){\n          weightSystem[key] = (parseInt(dValue[key])*rangeValues[index]).toString();\n          index ++;\n        }else{\n          weightSystem[key] = dValue[key];\n        }\n      }\n      return weightSystem\n    })\n  }\n\n  const getTemporalVector = (transformedData ) => {\n    const newV = transformedData.map(v => {\n      const { [nameHeader]: name, ...rest} = v;\n      return rest; \n    })\n    const { length } = newV;\n    const vectorTest = {}; \n    newV.forEach((element, index) => {\n      if(index !== 0) return \n      for (const key in element){\n        vectorTest[key] = newV.reduce((acc, val) => {\n          return acc + (val[key]/length);\n        }, 0);\n      }\n    });\n    for(const key in vectorTest){\n      vectorTest[key] = Math.round(vectorTest[key])\n    }\n    return vectorTest;\n  }\n\n  const getSystemAggregationTVector = (system, tVector, neighborsVector) => {\n    const newVector = {}; \n\n    switch (system) {\n      case 'Naive average':\n        return tVector\n      case 'Least misery':\n        for(const key in tVector){\n          newVector[key] = tVector[key] < 5 ? 0 : tVector[key]\n        }\n        return newVector\n      case 'Maximum pleasure':\n          for(const key in tVector){\n            newVector[key] = tVector[key] >= 8 ? tVector[key]: 0; \n          }\n          return newVector\n      case 'Media satisfaction':\n        const standardVector = getStandardDeviationFromNeighbor(neighborsVector); \n        console.table(standardVector);\n        for(const key in standardVector){\n          if(standardVector[key] > 1){\n            newVector[key] = 0; \n          }else{\n            newVector[key] = tVector[key]; \n          }\n        }\n        return newVector\n      default: \n        return tVector; \n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const rangeValues = transformRangeValue(values); \n    const transformedData = getTransformedData(mainData, rangeValues); \n    const currentPersonData = transformedData.find(name => name[nameHeader]===person);\n    const arrayR = getKNeighbors(transformedData,currentPersonData,[nameHeader], neighbors); \n    setArrayResult(arrayR); \n    const neighborsVector = transformedData.filter(n => {\n      return arrayR.map( a => a.name).includes(n[nameHeader]); \n    })\n    const tempVec = getTemporalVector(neighborsVector);\n    const protoPerson = {[nameHeader]: 'Proto person 🥸', ...tempVec}\n    \n    const aggregationVectorData = getSystemAggregationTVector(aggregation, tempVec, neighborsVector);\n    const aggregationPerson= {[nameHeader]: 'Aggregation person 😶', ...aggregationVectorData}; \n\n    \n    setNewVector({headers: headers, parsedData: [protoPerson, aggregationPerson]}); \n\n    const pizzasNeighborData = getKNeighbors(compareData, aggregationPerson, [nameHeader, secondHeader], neighbors, true); \n    setPizzaNeighbor(pizzasNeighborData); \n    \n    setShowTable(neighbors !== ('0' || ''))\n\n    \n  }\n\n  //set\n  const onChange = (id, newData) =>{\n    const copy = [...values]; \n    const current = copy.findIndex(e => e.id === id); \n    if(current === -1) return\n    copy[current].value = newData; \n    setValues(copy); \n  }\n\n  const transformRangeValue = (valuesArray) => {\n    return valuesArray.map(va => (va.value)/100)\n  }\n\n  const inputHandler = (e) => {\n    if(/^\\d+$/.test(e.target.value) || e.target.value === '') setNeighbors(e.target.value )\n  }\n\n  return (\n    <div className=\"sprint sprint4\">\n      <h2>Sprint 4</h2>\n      <form onSubmit={handleSubmit} className=\"sprint4__form\">  \n        <div className=\"sprint4__interaction\">\n          <aside \n            className=\"sprint4__actions\"\n            ref={ aside => {\n              if(!aside) return \n              setAsideHeigh(aside.getBoundingClientRect().height);\n            }} \n          >\n            <label>\n              <span>Person</span>\n              <NamesInput names={names} onSetValue={setPerson}/>\n            </label>\n            <label>\n              <span>Neighborhood Size</span>\n              <input \n              className=\"input-number\"\n              value={neighbors} \n              onChange={inputHandler} \n              type=\"text\" />\n            </label>\n            <label>\n              <span>Aggregation System</span>\n              <NamesInput names={aggregationSystem} onSetValue={setAggregation}/>\n            </label>\n          </aside>\n          <aside \n            className=\"slider-container\"\n            style={{\n              height: `${asideHeigh}px`\n            }}\n          >\n            {values.map((elem, index) => (\n              <Slider\n                key={elem.id}\n                name={elem.id}\n                onChange={(e) => onChange(elem.id, parseFloat(e.target.value))}\n                value={elem.value}\n              />\n            ))}\n          </aside>\n        </div>\n        <div className=\"btn-container\">\n          <div className=\"sprint4__set-info-container\">  \n            <div className=\"sprint4__set-info\">\n              <img src={user} alt=\"\" />\n              <span>{person}</span>\n            </div>\n            <div className=\"sprint4__set-info\">\n              <img src={share} alt=\"\" />\n              <span>Size {neighbors}</span>\n            </div>\n            <div className=\"sprint4__set-info\">\n              <img src={aggregationIcon} alt=\"\" />\n              <span>{aggregation}</span>\n            </div>\n          </div>\n          <button className=\"sprint4__submit\">Submit</button>\n        </div>\n      </form>\n      <h3>Neighborhood</h3>\n      <ul>\n        {arrayResult.map((elem, index) => (\n          <Neighbor \n            key={index}\n            index={index+1} \n            name={elem.name} \n            value={`${(elem.tie).toFixed(1)}%`}\n          />\n        ))}\n      </ul>\n      {showTable && <TableUi data={newVector}/>}\n      <h3>Pizzas</h3>\n      <ul>\n        {pizzaNeighbor.map((elem, index) => (\n          <Neighbor \n            key={index}\n            index={index+1} \n            name={elem.name} \n            value={`${(elem.tie).toFixed(1)}%`}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Sprint4\n","//Transform the csv data to an array of js objects\nexport const csvParser = async (data) => {\n  //1. split de data by break lines and commas in a single movement\n  //-> Expected result: [val1, val2, val3... ]\n  const transformed = data.split(/\\r?\\n/).map(data => data.split(','));\n  //Get the headers\n  const headers = transformed[0];\n  //2. rid of the headers\n  transformed.splice(0, 1);\n  //3. Design the array elem according to the headers\n  const obj_data = transformed.map(data => {\n    const current = {};\n    headers.forEach((i, index) => current[i] = data[index])\n    return current;\n  })\n  // return obj_data;\n  return {parsedData: obj_data, headers: headers};\n};","async function getData(DATA) {\n  const response = await fetch(DATA, {\n      headers: {\n        'content-type': 'text/csv;charset=UTF-8'\n      }\n    })\n    .catch(function () {\n    });\n  const data = await response.text();\n  return data;\n};\n\nexport default getData; ","export default __webpack_public_path__ + \"static/media/sp3.e917b64d.csv\";","export default __webpack_public_path__ + \"static/media/pizzas.54507808.csv\";","import React, { useEffect, useState} from 'react'; \nimport Sprint1 from './components/Sprint1'; \nimport Sprint2 from './components/Sprint2/Sprint2'; \nimport Sprint3 from './components/Sprint3/Sprint3';\nimport Sprint4 from './components/Sprint4/Sprint4';\nimport { csvParser } from './modules/csvParser';\nimport  fetchCSV  from './modules/fetchCSV';\nimport DATA from './data/sp3.csv'; \nimport PIZZAS from './data/pizzas.csv';\nimport './App.css';\n\nconst App = () => {\n  const [dataConverted, setDataConverted] = useState(null);\n  const [pizzaData, setPizzaData] = useState(null);\n\n  const getDataConverted = async (data) => {\n    const fetchData = await fetchCSV(data);\n    return csvParser(fetchData); \n  }; \n  \n  useEffect(()=>{\n    getDataConverted(DATA).then( val => {\n      setDataConverted(val)\n    });\n    getDataConverted(PIZZAS).then( val => {\n      setPizzaData(val)\n    });\n  }, []);\n\n  return (\n    <div className=\"sprints-container\">\n      {dataConverted && <Sprint1 data={dataConverted} />}\n      {dataConverted && <Sprint2 data={dataConverted} />}\n      {dataConverted && <Sprint3 data={dataConverted}/>}\n      {dataConverted && pizzaData && <Sprint4 data={dataConverted} secondData={pizzaData}/>}\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render( <App /> , document.getElementById('root') );\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"td\":\"TableUi_td__2EYQ8\",\"tr-table\":\"TableUi_tr-table__3jkAb\",\"tfoot\":\"TableUi_tfoot__2i3EY\",\"active\":\"TableUi_active__3-g2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"Slider_slider__1y3ey\",\"strong\":\"Slider_strong__1xcSt\",\"span\":\"Slider_span__357_c\"};"],"sourceRoot":""}