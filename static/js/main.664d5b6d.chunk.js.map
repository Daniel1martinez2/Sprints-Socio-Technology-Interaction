{"version":3,"sources":["UI/TableUi.js","components/Sprint1.js","modules/sort.js","components/Sprint2/NamesInput.js","components/Sprint2/CosenusSimilarity/magnitude.js","components/Sprint2/CosenusSimilarity/checkAngle.js","components/Sprint2/CosenusSimilarity/cosenus.js","components/Sprint2/CosenusSimilarity/dotProduct.js","components/Sprint2/Sprint2.js","modules/csvParser.js","modules/fetchCSV.js","data/sp3.csv","components/Sprint3/Visualization/Visualization.jsx","components/Sprint3/Sprint3.jsx","App.js","index.js","components/Sprint3/Visualization/Visualization.module.css","UI/TableUi.module.css"],"names":["TableUi","props","data","headers","parsedData","map","e","className","classes","rand","generate","getTd","tdInfo","key","push","elem","td","Sprint1","useState","inputValueName","setInputValueName","inputValueOrder","setInputValueOrder","copyCatData","setCopyCatData","onSubmit","event","preventDefault","ascendent","dataSorted","info","column","dispatch","sort","a","b","sortingHandler","value","onChange","target","name","NamesInput","names","onSetValue","id","getMagnitude","current","reducedValue","Object","values","splice","reduce","previousValue","currentValue","Math","pow","sqrt","ridOfHeader","item","checkAngle","rowA","rowB","rowAConverted","rowBConverted","rowAMax","max","rowBMax","rowANormalized","rowBNormalized","final","forEach","i","fixedSim","console","log","abs","cosineSimilarityFunc","dataArray","currentDotProduct","personProp","keys","filter","dotProduct","magnitudeA","magnitudeB","dot","Sprint2","input1","input2","inputValues","setInputValues","isFixed","setIsFixed","similarityPercentage","setSimilarityPercentage","prev","onClick","length","similarityConstant","toFixed","style","color","csvParser","transformed","split","obj_data","index","DATA","fetch","catch","response","text","getData","Visualization","neighbors","styles","left","tie","transform","random","Sprint3","currentPerson","setCurrentPerson","setNeighbors","arrayResult","setArrayResult","testArray","currentPersonInData","find","person","test","type","App","dataConverted","setDataConverted","getDataConverted","fetchCSV","fetchData","useEffect","then","val","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.664d5b6d.chunk.js","sourcesContent":["import  rand  from \"random-key\";\nimport classes from './TableUi.module.css'; \nconst TableUi = props => {\n  const {headers, parsedData} = props.data; \n  const td = () => {\n    const getTd = (e) => {\n      const tdInfo = [];\n      for (let key in e) {\n        tdInfo.push(e[key]); \n      }; \n      return tdInfo;\n    } \n    return parsedData.map(elem => {\n      return (\n        <tr className={classes['tr-table']} key={rand.generate()} >\n          {getTd(elem).map(e => <td className={classes['td']} key={rand.generate()}>{e}</td>) }\n        </tr>\n      )\n    }) \n  }\n  return (\n    <table>\n      <thead>\n      <tr>\n        {headers.map(e => <th key={rand.generate()} className={classes['tfoot']}>{e}</th>)}\n      </tr>\n      </thead>\n      <tbody>{td()}</tbody>\n    </table>\n  ); \n}\nexport default TableUi; ","import React, { useState } from 'react'; \nimport { sortingHandler } from '../modules/sort'; \nimport TableUi from '../UI/TableUi'; \nconst Sprint1 = props => {\n  const [inputValueName, setInputValueName] = useState('A'); \n  const [inputValueOrder, setInputValueOrder] = useState('1'); \n  const { data} = props;\n  const [copyCatData, setCopyCatData] = useState({...data}); \n  //submit\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n    const ascendent = inputValueOrder === '1' ? true : false; \n    const dataSorted = sortingHandler({\n      data: [...copyCatData['parsedData']], \n      ascendent, \n      column: inputValueName\n    }); \n    setCopyCatData({headers: copyCatData['headers'], parsedData: dataSorted}); \n  }; \n  return (\n    <div className=\"sprint sprint1\">  \n      <h2>Sprint 1</h2>\n      <form className=\"form\" onSubmit={handlerSubmit}>\n        <select\n          className=\"select\" \n          value={ inputValueName } \n          onChange={(e) => setInputValueName(e.target.value)}\n        >\n          <option value=\"A\">A</option>\n          <option value=\"B\">B</option>\n        </select>\n        <select \n          className=\"select\"\n          value={inputValueOrder}\n          onChange={(e) => setInputValueOrder(e.target.value)}\n        >\n          <option value=\"1\">Ascendent</option>\n          <option value=\"0\">Descendent</option>\n        </select>\n        <button name=\"submit\" className=\"btn\">Send</button>\n      </form>\n      {data && <TableUi data={copyCatData} />}\n    </div>\n  );\n}; \nexport default Sprint1;"," //Handle Sorting\n export const sortingHandler =  (info) => {\n  const {data, ascendent, column} = info; \n  let dispatch = [...data]; \n  if(ascendent){\n    dispatch.sort((a, b) => a[column] - b[column]);\n  }else{\n    dispatch.sort((a, b) => b[column] - a[column]); \n  }; \n  return dispatch;\n}; \n","import '../../App.css'; \nconst NamesInput = ({names,onSetValue}) => {\n  const handleInputChange = (event) => {\n    onSetValue(event.target.value); \n  }; \n  return(\n    <select className=\"select\" onChange={handleInputChange} name=\"names\" id=\"name-select\">\n      { names.map(name => <option value={name} key={name}>{name}</option>) }\n    </select>\n  );\n}\n\nexport default NamesInput;\n","export const getMagnitude = (current) => {\n  const total = Object.values(current).splice(1);\n  const reducer = (previousValue, currentValue) => previousValue + Math.pow(currentValue, 2);\n  const reducedValue = total.reduce(reducer, 0);\n  return Math.sqrt(reducedValue);\n}","import {getMagnitude} from './magnitude'; \nconst ridOfHeader = (item) => {\n  return Object.values(item).splice(1);\n}\nexport const checkAngle = ([rowA, rowB]) => {\n  const rowAConverted = ridOfHeader(rowA);\n  const rowBConverted = ridOfHeader(rowB);\n  const rowAMax = Math.max(...rowAConverted); \n  const rowBMax = Math.max(...rowBConverted); \n  const rowANormalized = rowAConverted.map(item => item / rowAMax); \n  const rowBNormalized = rowBConverted.map(item => item / rowBMax); \n  let final = 0; \n  rowANormalized.forEach((item,i) => {\n    final =+ (item - rowBNormalized[i]); \n  });   \n  return final === 0? true : false;\n}; \nexport const fixedSim = ([rowA, rowB]) => {\n  const a = getMagnitude(rowA); \n  const b = getMagnitude(rowB); \n  console.log(a,b);\n  return a === b ? 1 : (Math.abs(a - b) / Math.max(a, b)); \n}","import {dotProduct} from '../CosenusSimilarity/dotProduct'; \nimport { getMagnitude } from '../CosenusSimilarity/magnitude';\nimport {checkAngle, fixedSim} from '../CosenusSimilarity/checkAngle'; \n\nexport const getSimilarity = ({dot, magnitudeA, magnitudeB}) => {\n  const similarity = dot / (magnitudeA* magnitudeB);\n  return similarity; \n}\n\nexport const cosineSimilarityFunc = (dataArray) => {\n  const currentDotProduct = dotProduct(dataArray); \n  const magnitudeA = getMagnitude(dataArray[0]); \n  const magnitudeB = getMagnitude(dataArray[1]); \n  if(checkAngle(dataArray)){\n    console.log(fixedSim(dataArray), '🔥');\n    return fixedSim(dataArray)* 100; \n  }else{\n    return getSimilarity({dot: currentDotProduct,magnitudeA, magnitudeB })* 100; \n  }\n}","export const dotProduct = (data) => {\n  let personProp = 0; \n  let elemProps = Object.keys(data[0]).filter(elem => elem !== 'Nombre'); \n  elemProps.forEach((elem,i)=>{\n    personProp += data[0][elem] * data[1][elem]\n  })\n  return personProp;\n};","import React, {useState} from 'react'; \nimport NamesInput from './NamesInput'; \nimport {cosineSimilarityFunc} from './CosenusSimilarity/cosenus'; \nimport { checkAngle} from './CosenusSimilarity/checkAngle'; \n\n\nconst Sprint2 = ({data}) => {\n  const nameHeader = 'Nombre'; \n  const names = data.parsedData.map(name => name[nameHeader]); \n  const [inputValues, setInputValues] = useState({input1:names[0], input2:names[0]}); \n  const [isFixed, setIsFixed] = useState(false); \n  const [similarityPercentage, setSimilarityPercentage] = useState(0); \n  \n  const onSetInput1 = (value) => {\n    setInputValues(prev => ({...prev, input1: value}));\n  };  \n  const onSetInput2 = (value) => {\n    setInputValues(prev => ({...prev, input2: value})); \n  }; \n\n  const handleButtonClick = () => {\n    setIsFixed(false); \n    const dataArray = data.parsedData.filter(name => name[nameHeader]===inputValues.input1 || name[nameHeader]===inputValues.input2);\n    // console.log(dataArray, '😔😔😔'); \n    if (dataArray.length === 1){\n      setSimilarityPercentage(100); \n      return; \n    }\n\n    if(checkAngle(dataArray)){\n      // setSimilarityPercentage(fixedSim(dataArray)); \n      setIsFixed(true); \n      // return; \n    }; \n    const similarityConstant = cosineSimilarityFunc(dataArray); \n    setSimilarityPercentage(similarityConstant); \n  }\n  return(\n    <div className=\"sprint sprint2\">\n      <h2>Sprint 2</h2>\n      <div className=\"sprint2__info\">\n        <div className=\"sprint2__actions\">\n          <NamesInput names={names} onSetValue={onSetInput2}/>\n          <NamesInput names={names} onSetValue={onSetInput1}/>\n          <button onClick={handleButtonClick}>Submit</button>\n        </div>\n        <div className=\"sprint2__result\">\n          <h1 className=\"important\">{similarityPercentage.toFixed(1)}%</h1>\n          <h3 style={{color: '#ecf0f3'}}>{isFixed&& 'Fixed'}</h3>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Sprint2;","//Transform the csv data to an array of js objects\nexport const csvParser = async (data) => {\n  //1. split de data by break lines and commas in a single movement\n  //-> Expected result: [val1, val2, val3... ]\n  const transformed = data.split(/\\r?\\n/).map(data => data.split(','));\n  //Get the headers\n  const headers = transformed[0];\n  //2. rid of the headers\n  transformed.splice(0, 1);\n  //3. Design the array elem according to the headers\n  const obj_data = transformed.map(data => {\n    const current = {};\n    headers.forEach((i, index) => current[i] = data[index])\n    return current;\n  })\n  // return obj_data;\n  return {parsedData: obj_data, headers: headers};\n};","async function getData(DATA) {\n  const response = await fetch(DATA, {\n      headers: {\n        'content-type': 'text/csv;charset=UTF-8'\n      }\n    })\n    .catch(function () {\n      console.log(\"error\");\n    });\n  const data = await response.text();\n  return data;\n};\n\nexport default getData; ","export default __webpack_public_path__ + \"static/media/sp3.f237e02f.csv\";","import React from 'react'\nimport styles from './Visualization.module.css'; \n\nconst Visualization = ({neighbors}) => {\n  \n  return (\n    <div className={styles['visualization-container']}>\n      <div className={styles['visualization']}>\n        <h1 className={styles['indicator']}>100%</h1>\n        {neighbors.map(elem => (\n          <div \n            key={Math.random()}\n            style={{\n              left: `${100-((elem.tie)).toFixed(3)}%`,\n              transform: `translate(-${100-((elem.tie)).toFixed(3)}%, 0)`,\n            }} \n            className={styles['example']}\n          >\n            <span>{elem.name}</span>\n          </div>\n        ))}\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Visualization\n","import React, {useState} from 'react'\nimport {cosineSimilarityFunc} from '../Sprint2/CosenusSimilarity/cosenus'; \nimport NamesInput from '../Sprint2/NamesInput'; \nimport Visualization from './Visualization/Visualization'; \n\nconst Sprint3 = ({data}) => {\n  const nameHeader = 'Nombre'; \n  const names = data.parsedData.map(name => name[nameHeader]);\n  const [currentPerson, setCurrentPerson] = useState(names[0]); \n  const [neighbors, setNeighbors] = useState(0); \n  const [arrayResult, setArrayResult ] = useState([]) ; \n  const submitHandler = (e) => {\n    e.preventDefault();\n    \n    const testArray = []; \n    const currentPersonInData = data.parsedData.find(name => name[nameHeader]===currentPerson);\n    const dataToCompare = data.parsedData.filter(name => name[nameHeader]!==currentPerson);\n    dataToCompare.forEach(person => {\n      const tie = cosineSimilarityFunc([currentPersonInData,person]);\n      const name = person[nameHeader]; \n      testArray.push({tie, name}); \n    })\n    setArrayResult(testArray.sort((a,b) => b.tie-a.tie).splice(0,neighbors)); \n  }\n  const inputHandler = (e) => {\n    if(/^\\d+$/.test(e.target.value) || e.target.value === '') setNeighbors(e.target.value )\n  }\n\n  return (\n    <div className=\"sprint sprint3\">\n      <h2>Sprint 3</h2>\n      <form onSubmit={submitHandler}>\n        <label>\n          <span>Person</span>\n          <NamesInput names={names} onSetValue={setCurrentPerson} />\n        </label>\n        <label>\n          <span>Neighborhood Size</span>\n          <input \n            className=\"input-number\"\n            value={neighbors} \n            onChange={inputHandler} \n            type=\"text\" />\n        </label>\n        <button>Submit</button>\n      </form>\n      {arrayResult.length > 0 && <h3>Nearest Neighbors</h3>}\n      <ul>\n        {arrayResult.map((elem, index) => <li key={Math.random()}>{index+1} {elem.name}.......{(elem.tie).toFixed(1) } %</li>)}\n      </ul>\n      <Visualization neighbors={arrayResult}/>\n    </div>\n  )\n}\n\nexport default Sprint3\n","import React, { useEffect, useState} from 'react'; \nimport Sprint1 from './components/Sprint1'; \nimport Sprint2 from './components/Sprint2/Sprint2'; \n// import ChartExample from './components/ChartExample'; \nimport { csvParser } from './modules/csvParser';\n\nimport  fetchCSV  from './modules/fetchCSV'; \nimport DATA from './data/sp3.csv'; \nimport './App.css';\nimport Sprint3 from './components/Sprint3/Sprint3';\n\nconst App = () => {\n  const [dataConverted, setDataConverted] = useState(null);\n\n  const getDataConverted = async () => {\n    const fetchData = await fetchCSV(DATA);\n    return csvParser(fetchData); \n  }; \n  \n  useEffect(()=>{\n    getDataConverted().then( val => {\n      setDataConverted(val)\n    });\n  }, []);\n\n  return (\n    <div className=\"sprints-container\">\n      {dataConverted && <Sprint1 data={dataConverted} />}\n      {/* <ChartExample/> */}\n      {dataConverted && <Sprint2 data={dataConverted} />}\n      {dataConverted && <Sprint3 data={dataConverted}/>}\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render( <App /> , document.getElementById('root') );\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visualization-container\":\"Visualization_visualization-container__3z-8T\",\"visualization\":\"Visualization_visualization__3PUXF\",\"example\":\"Visualization_example__yelYw\",\"indicator\":\"Visualization_indicator__Kfh2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"td\":\"TableUi_td__2EYQ8\",\"tr-table\":\"TableUi_tr-table__3jkAb\",\"tfoot\":\"TableUi_tfoot__2i3EY\"};"],"sourceRoot":""}